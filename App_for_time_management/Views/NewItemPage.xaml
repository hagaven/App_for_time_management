<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="App_for_time_management.Views.NewItemPage"
             Shell.PresentationMode="ModalAnimated"
             Title="New Item"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core" xmlns:viewmodels="clr-namespace:App_for_time_management.ViewModels" xmlns:model="clr-namespace:App_for_time_management.Models" x:DataType="viewmodels:NewItemViewModel"
             ios:Page.UseSafeArea="true">
    <ContentPage.Content>
        <ScrollView>
            <StackLayout Spacing="3" Padding="15">

                <Label Text="Nazwa aktywności" FontSize="Medium" />
                <Entry Text="{Binding Text, Mode=TwoWay}" FontSize="Medium" />

                <Label Text="Opis aktywności" FontSize="Medium" />
                <Editor Text="{Binding Description, Mode=TwoWay}" AutoSize="TextChanges" FontSize="Medium" Margin="0" />

                <Label Text="Ostateczna data zakończenia aktywności"/>
                <DatePicker x:Name="DeadlineDatePicker"
                        MinimumDate="{Binding Today}"
                        Date="{Binding DeadlineDate, Mode=TwoWay}"/>
                <Label x:Name="DeadlineDate"
                   Text="{Binding Date, Source={x:Reference DeadlineDatePicker}}"
                   FontSize="Medium"
                   HorizontalOptions="Center"
                   TextColor="White"/>

                <Label Text="Ostateczna godzina zakończenia aktywności"/>
                <TimePicker x:Name="DeadlineTimePicker"
                        Time="{Binding DeadlineTime, Mode=TwoWay}"/>

                <Label Text="Typ aktywności"/>
                <Picker x:Name="eisenhower"
                        Title="Wybierz typ aktywności"
                        SelectedItem="{Binding Eisenhower}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Ważne i pilne</x:String>
                            <x:String>Ważne i niepilne</x:String>
                            <x:String>Nieważne i pilne</x:String>
                            <x:String>Nieważne i niepilne</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="Czy aktywność musi być wykonana o wpisanej godzinie?"/>
                <Switch x:Name="TimeSensitive"
                        IsToggled="{Binding TimeSensitive}"/>
                <StackLayout IsVisible="{Binding Source={x:Reference TimeSensitive},Path=IsToggled}">
                    <Label Text="Czy jest to cykliczna aktywność?"/>
                    <Switch x:Name="Cyclic"
                            IsToggled="{Binding IsCyclic}">
                    </Switch>
                    <Picker x:Name="CyclicType"
                            Title="Powtarzaj:"
                            SelectedItem="{Binding CyclePeriod}"
                            IsVisible="{Binding Source={x:Reference Cyclic},Path=IsToggled}">
                        <Picker.ItemsSource>
                            <x:Array Type="{x:Type x:String}">
                                <x:String>Codziennie</x:String>
                                <x:String>Co tydzień</x:String>
                                <x:String>Co miesiąc</x:String>
                                <x:String>Co rok</x:String>
                            </x:Array>
                        </Picker.ItemsSource>
                    </Picker>
                    
                </StackLayout>

                <Label Text="Przybliżony czas trwania aktywności"/>
                <Label Text="Godziny"/>
                <Slider x:Name="DurationHoursSlider"
                    Minimum="0"
                    Maximum="50"
                    Value="{Binding DurationHours, Mode=TwoWay}"
                    ValueChanged="DurationHoursSlider_ValueChanged"
                    />
                <Label x:Name="durCntrl1"
                       Text="{Binding DurCntrl1,Mode=TwoWay}"/>

                <Label Text="Minuty"/>
                <Slider x:Name="DurationMinutesSlider"
                    Minimum="0"
                    Maximum="59"
                    
                    ValueChanged="DurationMinutesSlider_ValueChanged"
                    Value="{Binding DurationMinutes}"
                    />
                <Label x:Name="durCntrl2"
                       Text="{Binding DurCntrl2,Mode=TwoWay}"/>

                <RefreshView x:DataType="viewmodels:NewItemViewModel" Command="{Binding LoadSubItemsCommand}" IsRefreshing="{Binding IsBusy, Mode=TwoWay}">
                    <StackLayout x:Name="SubItemsListView"
                                 BindableLayout.ItemsSource="{Binding SubActivities}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <Frame>
                                    <StackLayout Padding="10" x:DataType="model:SubActivity">
                                        <Label Text="{Binding Text}" 
                                               LineBreakMode="NoWrap" 
                                               Style="{DynamicResource ListItemTextStyle}" 
                                               FontSize="16" />
                                        <Label Text="{Binding Description}" 
                                               LineBreakMode="NoWrap"
                                               Style="{DynamicResource ListItemDetailTextStyle}"
                                               FontSize="13" />
                                        <StackLayout.GestureRecognizers>
                                            <TapGestureRecognizer 
                                                NumberOfTapsRequired="1"
                                                Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:NewItemViewModel}}, Path=SubItemTapped}"		
                                                CommandParameter="{Binding .}">
                                            </TapGestureRecognizer>
                                        </StackLayout.GestureRecognizers>
                                    </StackLayout>
                                </Frame>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </StackLayout>
                </RefreshView>
                
                <ScrollView>
                    <StackLayout BindableLayout.ItemsSource="{Binding ActivityNotes, Mode=TwoWay}">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate x:DataType="model:ActivityNote">
                                <Frame>
                                    <Label Text="{Binding Content}"/>
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer
                                                NumberOfTapsRequired="1"
                                                Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:NewItemViewModel}},Path=NoteTapped}"
                                                CommandParameter="{Binding .}">
                                        </TapGestureRecognizer>
                                    </Frame.GestureRecognizers>
                                </Frame>
                                
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>

                    </StackLayout>
                </ScrollView>
                <Button Text="Dodaj etap" Command="{Binding AddSubActivityCommand}" HorizontalOptions="FillAndExpand"></Button>
                <Button Text="Dodaj notatkę" Command="{Binding AddActivityNoteCommand}" HorizontalOptions="FillAndExpand"></Button>



                <StackLayout Orientation="Horizontal">

                    <Button Text="Anuluj" Command="{Binding CancelCommand}" HorizontalOptions="FillAndExpand"></Button>
                    <Button Text="Zapisz" Command="{Binding SaveCommand}" HorizontalOptions="FillAndExpand"></Button>
                </StackLayout>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
    
</ContentPage>
